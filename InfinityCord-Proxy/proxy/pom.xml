
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.github.happyrogelio7.infinitycord</groupId>
        <artifactId>infinitycord-parent</artifactId>
        <version>1.19-R0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>com.github.happyrogelio7.infinitycord</groupId>
    <artifactId>infinitycord-proxy</artifactId>
    <version>1.19-R0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>InfinityCord-Proxy</name>
    <description>Proxy component of the Elastic Portal Suite</description>

    <properties>
        <maven.deploy.skip>true</maven.deploy.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-haproxy</artifactId>
            <version>${netty.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <version>${netty.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Waterfall Start - add Netty DNS resolver -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver-dns</artifactId>
            <version>${netty.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver-dns-native-macos</artifactId>
            <version>${netty.version}</version>
            <classifier>osx-x86_64</classifier>
        </dependency>
        <!-- Waterfall End -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
            <version>${netty.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <version>${netty.version}</version>
            <classifier>linux-x86_64</classifier>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-api</artifactId>
            <version>1.19-R0.1-SNAPSHOT-002</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-log4j</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-native</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-protocol</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-query</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- // Waterfall - We already bundle an slf4j impl
        <dependency>
            <groupId>net.md-5</groupId>
            <artifactId>bungeecord-slf4j</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency> // Waterfall - We already bundle an slf4j impl -->
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>5.0.4</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.28</version>
            <scope>runtime</scope>
        </dependency>
        <!-- add these back in as they are not exposed by the API -->
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-resolver-provider</artifactId>
            <version>3.8.4</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-connector-basic</artifactId>
            <version>1.7.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.resolver</groupId>
            <artifactId>maven-resolver-transport-http</artifactId>
            <version>1.7.2</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Waterfall start - Console improvements - bring back slf4j-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.7.30</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.minecrell</groupId>
            <artifactId>terminalconsoleappender</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.jline</groupId>
            <artifactId>jline-terminal-jansi</artifactId>
            <version>3.12.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-module-cmd-alert</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-module-cmd-server</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-module-cmd-list</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-module-cmd-find</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-module-cmd-send</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.github.happyrogelio7.infinitycord</groupId>
            <artifactId>infinitycord-module-reconnect-yaml</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Waterfall end -->
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <!-- Waterfall start - copy license files into jar -->
            <resource>
                <directory>../</directory>
                <includes>
                    <include>LICENSE</include>
                </includes>
            </resource>
            <resource>
                <directory>../../</directory>
                <includes>
                    <include>LICENSE.txt</include>
                </includes>
            </resource>
            <!-- Waterfall end -->
        </resources>
    </build>
</project>
